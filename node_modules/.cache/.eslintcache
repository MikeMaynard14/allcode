[{"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/index.js":"1","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/App.js":"2","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Register.js":"3","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/miniModalLeft.js":"4","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/MiniModalLeft.js":"5","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/MiniModalRight.js":"6","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Login.js":"7","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Dashboard.js":"8","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/PostItem.js":"9","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/EditPost.js":"10"},{"size":351,"mtime":1653842836394,"results":"11","hashOfConfig":"12"},{"size":443,"mtime":1653907399357,"results":"13","hashOfConfig":"12"},{"size":8782,"mtime":1655373793679,"results":"14","hashOfConfig":"12"},{"size":265,"mtime":1653229626587,"results":"15","hashOfConfig":"12"},{"size":265,"mtime":1653229626587,"results":"16","hashOfConfig":"12"},{"size":275,"mtime":1653231691567,"results":"17","hashOfConfig":"12"},{"size":1558,"mtime":1654084757889,"results":"18","hashOfConfig":"12"},{"size":2891,"mtime":1655374878449,"results":"19","hashOfConfig":"12"},{"size":1307,"mtime":1654693696639,"results":"20","hashOfConfig":"12"},{"size":1210,"mtime":1654694803335,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"18itpxo",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/index.js",[],[],[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/App.js",[],[],[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Register.js",["63","64","65","66","67","68"],[],"import axios from 'axios';\nimport React, { useState } from 'react'\nimport MiniModalLeft from './components/MiniModalLeft';\nimport MiniModalRight from './components/MiniModalRight';\nimport { useNavigate } from 'react-router-dom';\nimport Okay from '../src/assets/okay.svg';\nimport NotOkay from '../src/assets/notOkay.svg';\n\nconst Register = () => {\n\n    const navigate = useNavigate();\n\n    const [inputs, setInputs] = useState({\n        first: '',\n        last: '', \n        email: '',\n        username: '', \n        contact: '',\n        password: '',\n        passwordCon: '',\n        image: '',\n    });\n\n    const [nameError, setNameError] = useState();\n    const [lastError, setLastError] = useState();\n    const [emailError, setEmailError] = useState();\n    const [usernameError, setUsernameError] = useState();\n    const [contactError, setContactError] = useState();\n    const [passwordError, setPasswordError] = useState();\n    const [passwordConError, setPasswordConError] = useState();\n\n    const [emailAvail, setEmailAvail] = useState();\n    const [userAvail, setUserAvail] = useState();\n\n    const [emailIcon, setEmailIcon] = useState();\n    const [userIcon, setUserIcon] = useState();\n\n    const firstVal = (e) => {\n        const value = e.target.value;\n        setInputs({...inputs, first: value});\n        if(inputs.first !== ''){setNameError();} \n    }\n\n    const imageVal = (e) => {           \n            let file = e.target.files[0];\n            let reader = new FileReader();\n\n            reader.onloadend = function() {\n            console.log(reader.result);\n            let imgFile = reader.result;\n\n            setInputs({...inputs, image: imgFile});\n\n            let image = new Image();\n            image.src = reader.result;\n            document.getElementById('profileimg').appendChild(image);\n            \n            }\n            reader.readAsDataURL(file);\n    }\n\n    const lastVal = (e) => {\n        const value = e.target.value;\n        setInputs({...inputs, last: value});\n        if(inputs.last !== ''){setLastError();} \n    }\n\n    const emailVal = (e) => {\n        const mailcodex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const value = e.target.value;\n        setInputs({...inputs, email: value});\n        if(inputs.email !== ''){\n            setEmailError();\n        } \n        if(!value.match(mailcodex)){\n            setEmailError(<MiniModalLeft message=\"Email is not a valid format\" />);\n        }    \n    }\n\n    const validateEmail = () => {\n        axios.post('http://localhost:8888/api/authenticateEmail.php', inputs)\n        .then(function(response){\n         console.log(response);\n         if(response.data === \"Available\"){\n            setEmailIcon(Okay);\n            setEmailAvail();\n         } else if(response.data === \"Not Available\") {\n            setEmailAvail(<MiniModalRight message=\"Email Is Not Available\" />);\n            setEmailIcon(NotOkay);\n         } else if(response.data === \"\") {\n            setEmailIcon();\n            setEmailAvail();\n            setEmailError();\n         }\n        });\n    }\n\n    const usernameVal = (e) => {\n        const value = e.target.value.trim();\n        setInputs({...inputs, username: value});\n        if(inputs.username != ''){setUsernameError();} \n    }\n\n    const validateUser = () => {\n        axios.post('http://localhost:8888/api/authenticateUser.php', inputs)\n        .then(function(response){\n         console.log(response);\n         if(response.data === \"Available\"){\n            setUserAvail();\n            setUserIcon(Okay);\n         } else {\n            setUserAvail(<MiniModalLeft message=\"Username Is Not Available\" />);\n            setUserIcon(NotOkay);\n         }\n        });\n    }\n\n    const contactVal = (e) => {\n        const contCodex = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/;\n        const value = e.target.value;\n        setInputs({...inputs, contact: value});\n        if(inputs.contact != ''){setContactError();} \n\n        if(!value.match(contCodex)){\n            setContactError(<MiniModalRight message=\"Not a Valid Phone Number\" />);\n        } \n    }\n\n    const passwordVal = (e) => {\n        const passCodex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*(\\W|_)).{5,}$/ ;\n        const value = e.target.value;\n        setInputs({...inputs, password: value});\n        if(inputs.password != ''){setPasswordError();} \n\n        if(!value.match(passCodex)){\n            setPasswordError(<MiniModalLeft message=\"Password must include stuff\" />);\n        } \n    }\n\n    const passwordConVal = (e) => {\n        const value = e.target.value;\n        setInputs({...inputs, passwordCon: value});\n        if(inputs.password === value){setPasswordConError()}else{\n            setPasswordConError(<MiniModalLeft message=\"Your Passwords Dont Match\" />);\n        }  \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(inputs);\n\n        if(inputs.first === ''){\n            setNameError(<MiniModalLeft message=\"Everyone has one...\" />);\n        } else {\n            setNameError();\n        }\n\n        if(inputs.last === ''){\n            setLastError(<MiniModalRight message=\"You aren't Seal... \" />);\n        } else {\n            setLastError();\n        }\n\n        if(inputs.email === ''){\n            setEmailError(<MiniModalLeft message=\"You must have an email\" />);\n        } else {\n            setEmailError();\n        }\n\n        if(inputs.username === ''){\n            setUsernameError(<MiniModalLeft message=\"You will login with this\" />);\n        } else {\n            setUsernameError();\n        }\n\n        if(inputs.contact === ''){\n            setContactError(<MiniModalRight message=\"We will call you all the time\" />);\n        } else {\n            setContactError();\n        }\n\n        if(inputs.password === ''){\n            setPasswordError(<MiniModalLeft message=\"Keep it simple and easy...\" />);\n        } else {\n            setPasswordError();\n        }\n\n        if(inputs.passwordCon === ''){\n            setPasswordConError(<MiniModalLeft message=\"They Kinda need to match...\" />);\n        } else {\n            setPasswordConError();\n        }\n\n        let result = Object.values(inputs).some(o => o === '');\n\n        if(result){\n            console.log('Not working');\n        } else {\n            axios.post('http://localhost:8888/api/addUser.php', inputs)\n            .then(function(response){\n             console.log(response);\n\n             if(response.status === 200){\n                 //navigate(\"/login\");\n                 console.log(\"Working Fine\");\n             }\n\n            });\n        }\n\n    }\n\n  return (\n    <div>\n        <form id='ImgOne' encType=\"multipart/form-data\">\n            <h1>Sign Up to FakeBook</h1>\n            <p>Give us all that sweet sweet data!</p>\n            <div className='imageArea'>\n                <p>Upload a Profile Image</p>\n                <input name=\"imageUrl\" className='imgInput' type=\"file\" onChange={imageVal} />\n                <div id=\"profileimg\" className='profile_img'></div>  \n            </div>\n           \n            <div className='names'>\n                {nameError}\n                <input name=\"first\" className='left' type=\"text\" placeholder='First Name' onChange={firstVal} />\n                {lastError}\n                <input name='last' type=\"text\" placeholder='Last Name' onChange={lastVal} />\n            </div>\n            {emailError}  \n            {emailAvail}       \n            <div className='statusIcon'>\n                <img src={emailIcon}/>\n            </div>\n            <input name=\"email\" type=\"email\" placeholder='Your Email' onBlur={validateEmail} onChange={emailVal} />\n            <div className='userCon'>\n                {usernameError}\n                {userAvail}\n                <div className='statusIconUser'>\n                    <img src={userIcon}/>\n                </div>\n                <input name=\"username\" className='left' type=\"username\" placeholder='Select A Username' onBlur={validateUser} onChange={usernameVal} />\n                {contactError}\n                <input name=\"contact\" type=\"contact\" placeholder='Contact Number' onChange={contactVal} />\n            </div>\n            <div className='passCon'>\n                {passwordError}\n                <input name=\"password\" type=\"password\" placeholder='Choose A Password' onChange={passwordVal} />\n                {passwordConError}\n                <input name=\"conPass\" type=\"password\" placeholder='Confirm Password' onChange={passwordConVal} />\n                \n            </div>\n            <button type=\"submit\" onClick={handleSubmit} >Take My Data Lizard Man!</button>\n        </form>\n            \n    </div>\n  )\n}\n\nexport default Register\n",[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/miniModalLeft.js",["69"],[],"import React from 'react'\nimport ErrorAsset from '../assets/error.svg';\n\nconst miniModalLeft = () => {\n  return (\n    <div className='alertMiniModal'>\n      <p>What's Your Name</p>\n      <img src={ErrorAsset} />\n    </div>  \n  )\n}\n\nexport default miniModalLeft\n",[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/MiniModalLeft.js",["70"],[],"import React from 'react'\nimport ErrorAsset from '../assets/error.svg';\n\nconst MiniModalLeft = (props) => {\n  return (\n    <div className='alertMiniModal'>\n      <p>{props.message}</p>\n      <img src={ErrorAsset} />\n    </div>  \n  )\n}\n\nexport default MiniModalLeft\n","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/MiniModalRight.js",["71"],[],"import React from 'react'\nimport ErrorAsset from '../assets/error.svg';\n\nconst MiniModalRight = (props) => {\n  return (\n    <div className='alertMiniModalRight'>\n        <img src={ErrorAsset} />\n        <p>{props.message}</p> \n    </div>\n  )\n}\n\nexport default MiniModalRight\n","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Login.js",[],[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/Dashboard.js",["72","73","74","75"],[],"import React from 'react'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport PostItem from './components/PostItem'\nimport { useNavigate } from 'react-router-dom'\n\nconst Dashboard = () => {\n\n  const navigate = useNavigate();\n\n    const [userId, setUserId] = useState({\n        activeUser: sessionStorage.getItem('activeUser'),\n    });\n\n    const [posts, setPosts] = useState();\n    const [postMessage, setPostMessage] = useState({\n      message: '', \n      user: sessionStorage.getItem('activeUser'),\n    });\n\n    const [renderPost, setRenderPost] = useState();\n\n    const [renderImage, setRenderImage] = useState();\n\n    useEffect(()=>{\n      const userSession = sessionStorage.getItem('activeUser');\n      console.log(userSession);\n    if(userSession === '' || userSession === undefined){\n    navigate('/');\n    }\n\n    let userProfile = {activeUser: userSession};\n\n      axios.post('http://localhost:8888/api/readProfile.php', userProfile)\n      .then((res)=>{\n        let data = res.data;\n        let source = data[0].imgPath;\n        let renderpath = 'http://localhost:8888/api/' + source;\n        setRenderImage(renderpath);\n        \n      })\n      .catch(err=>{\n        console.log(err);\n      });\n\n    \n    }, []);\n\n  \n    useEffect(()=>{\n\n      axios.post('http://localhost:8888/api/readUserPosts.php', userId)\n      .then((res)=>{\n        let data = res.data;\n        let renderPost = data.map((item) =>  <PostItem key={item.id} rerender={setRenderPost} uniqueId={item.id} userpost={item.userpost} date={item.timestamp} message={item.message}  />);\n        console.log(data);\n        setPosts(renderPost);\n        setRenderPost(false);\n        \n      })\n      .catch(err=>{\n        console.log(err);\n      });\n\n   },[renderPost]);\n\n   const postVal = (e) => {\n    let messageVal = e.target.value;\n    setPostMessage({...postMessage, message: messageVal});\n   }\n\n   const addNewPost = (e) => {\n     e.preventDefault();\n     document.getElementById('textMes').value = \"\";\n     axios.post('http://localhost:8888/api/addPost.php', postMessage)\n      .then((res)=>{\n        let data = res.data;\n        console.log(data); \n        setRenderPost(true);\n      });\n   }\n\n   const setLogout = () => {\n      sessionStorage.setItem('activeUser','');\n      navigate('/');\n   }\n\n\n  return (\n    <div className='dash'>\n      <h1>Your Timeline</h1>\n      <p onClick={setLogout}>Logout</p>\n      <p>Lets create a library of cringe</p>\n      <img src={renderImage} className='dashProfile' />\n      <div className='posts'>\n        {posts}\n      </div>\n      <div className='form'>\n        <form>\n          <p>Add New Post</p>\n            <textarea id='textMes' placeholder='New Post Message' onChange={postVal} />\n            <button type='submit' onClick={addNewPost}>Add Post To Timeline</button>\n        </form>\n      </div>\n   \n    </div>\n  )\n}\n\nexport default Dashboard\n","/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/PostItem.js",[],[],[],"/Users/mikemaynard/Desktop/Open Window/DevEnv/lecturefiveprep/src/components/EditPost.js",["76"],[],"import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst EditPost = (props) => {\n\n  const [updatedPost, setUpdatedPost] = useState({\n    newMessage: props.original, \n    id: props.id\n  });\n\n  const closeModal = () => {\n    props.rerender();\n  }\n  \n  useEffect(()=>{\n    document.getElementById('updateText').innerHTML = props.original;\n  },[]);\n\n  const handleChange = (e) => {\n    let value = e.target.value;\n    setUpdatedPost({...updatedPost, newMessage: value});\n    console.log(updatedPost);\n  }\n\n  const udpatePost = (e) => {\n    e.preventDefault();\n\n    axios.post('http://localhost:8888/api/updatePost.php', updatedPost)\n      .then((res)=>{\n        let data = res.data;\n        console.log(data); \n        props.upRender(true);\n        props.rerender();\n      });\n  }\n\n  return (\n    <div className='modal'>\n      <form>\n        <h1>Made a Mistake? Edit that shit!</h1>\n        <p onClick={closeModal}>Close Modal</p>\n        <textarea id='updateText' placeholder='Edit Post Message' onChange={handleChange}/>\n        <button type='submit' onClick={udpatePost}>Edit this post</button>\n      </form>\n       \n    </div>\n  )\n}\n\nexport default EditPost\n",{"ruleId":"77","severity":1,"message":"78","line":11,"column":11,"nodeType":"79","messageId":"80","endLine":11,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":101,"column":28,"nodeType":"83","messageId":"84","endLine":101,"endColumn":30},{"ruleId":"81","severity":1,"message":"82","line":122,"column":27,"nodeType":"83","messageId":"84","endLine":122,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":133,"column":28,"nodeType":"83","messageId":"84","endLine":133,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":233,"column":17,"nodeType":"87","endLine":233,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":240,"column":21,"nodeType":"87","endLine":240,"endColumn":42},{"ruleId":"85","severity":1,"message":"86","line":8,"column":7,"nodeType":"87","endLine":8,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":8,"column":7,"nodeType":"87","endLine":8,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":7,"column":9,"nodeType":"87","endLine":7,"endColumn":33},{"ruleId":"77","severity":1,"message":"88","line":11,"column":20,"nodeType":"79","messageId":"80","endLine":11,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":47,"column":8,"nodeType":"91","endLine":47,"endColumn":10,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":65,"column":6,"nodeType":"91","endLine":65,"endColumn":18,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"86","line":94,"column":7,"nodeType":"87","endLine":94,"endColumn":56},{"ruleId":"89","severity":1,"message":"95","line":18,"column":5,"nodeType":"91","endLine":18,"endColumn":7,"suggestions":"96"},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'props.original'. Either include it or remove the dependency array.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [navigate]",{"range":"106","text":"107"},"Update the dependencies array to be: [renderPost, userId]",{"range":"108","text":"109"},"Update the dependencies array to be: [props.original]",{"range":"110","text":"111"},[1242,1244],"[navigate]",[1750,1762],"[renderPost, userId]",[392,394],"[props.original]"]